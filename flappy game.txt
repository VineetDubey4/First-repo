
import pygame
import random

pygame.init()

WIDTH, HEIGHT = 400, 600
screen = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("Flappy Bird Clone")

WHITE = (255, 255, 255)
BLACK = (0, 0, 0)
GREEN = (0, 255, 0)
BLUE = (0, 0, 255)

BIRD_WIDTH = 40
BIRD_HEIGHT = 30
BIRD_COLOR = (255, 255, 0)

PIPE_WIDTH = 60
PIPE_GAP = 150
PIPE_COLOR = (0, 255, 0)

gravity = 0.5
bird_jump = -10

font = pygame.font.SysFont("comicsansms", 30)

def display_score(score):
    value = font.render(f"Score: {score}", True, BLACK)
    screen.blit(value, [10, 10])

def create_pipe():
    pipe_height = random.randint(150, 400)
    pipe_x = WIDTH + PIPE_WIDTH
    return {"top": pygame.Rect(pipe_x, 0, PIPE_WIDTH, pipe_height - PIPE_GAP),
            "bottom": pygame.Rect(pipe_x, pipe_height, PIPE_WIDTH, HEIGHT - pipe_height)}

def move_pipes(pipes):
    for pipe in pipes:
        pipe["top"].x -= 5
        pipe["bottom"].x -= 5

def draw_pipes(pipes):
    for pipe in pipes:
        pygame.draw.rect(screen, PIPE_COLOR, pipe["top"])
        pygame.draw.rect(screen, PIPE_COLOR, pipe["bottom"])

def check_collision(bird, pipes):
    for pipe in pipes:
        if bird.colliderect(pipe["top"]) or bird.colliderect(pipe["bottom"]):
            return True
    if bird.y >= HEIGHT or bird.y <= 0:
        return True
    return False

def game_loop():
    bird_x = WIDTH // 4
    bird_y = HEIGHT // 2
    bird_movement = 0

    pipes = [create_pipe()]
    score = 0
    clock = pygame.time.Clock()

    game_over = False
    while not game_over:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                game_over = True
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_SPACE:
                    bird_movement = bird_jump

        bird_movement += gravity
        bird_y += bird_movement

        bird = pygame.Rect(bird_x, bird_y, BIRD_WIDTH, BIRD_HEIGHT)

        move_pipes(pipes)
        if pipes[-1]["top"].x < WIDTH // 2:
            pipes.append(create_pipe())

        if pipes[0]["top"].x < -PIPE_WIDTH:
            pipes.pop(0)
            score += 1

        if check_collision(bird, pipes):
            game_over = True

        screen.fill(BLUE)

        pygame.draw.rect(screen, BIRD_COLOR, bird)

        draw_pipes(pipes)

        display_score(score)

        pygame.display.update()

        clock.tick(30)

    pygame.quit()

if __name__ == "__main__":
    game_loop()
